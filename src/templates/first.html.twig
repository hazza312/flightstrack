<html>

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha2x56-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>

    <script>
        let countries = {{ countries | json_encode | raw }};

        function getFlagEmoji(countryCode) {
            const codePoints = countryCode
                .toUpperCase()
                .split('')
                .map(char => 127397 + char.charCodeAt());
            return String.fromCodePoint(...codePoints);
        }
    </script>
    <style>
        .price {
            font-size: larger;
            display: inline-block;
            margin-bottom: 10px;
        }

        .period {
            font-size: small;
            padding-top: 10px;
        }

        td {
            vertical-align: middle;
        }
    </style>

</head>


<body>
<div class="container">
    <div class="row">
        <div class="jumbotron mt-3">
            <h1 class="display-4">Hello {{ name }}</h1>
            <p class="lead">Let's see your upcoming destinations and find you some offers</p>
        </div>
    </div>

    <div class="row">
        <div id="map" style="height: 350px"></div>
    </div>


    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.2.1/chart.umd.js"
            integrity="sha512-vCUbejtS+HcWYtDHRF2T5B0BKwVG/CLeuew5uT2AiX4SJ2Wff52+kfgONvtdATqkqQMC9Ye5K+Td0OTaz+P7cw=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="
https://cdn.jsdelivr.net/npm/chartjs-chart-matrix@2.0.1/dist/chartjs-chart-matrix.min.js
"></script>
    <div class="row">
        <h2 class="mt-4">Best Fares Now</h2>
        <p>Best fares from KLM: booking today for a return trip in the short, mid and long term.</p>
    </div>

    <table class="table">
        <thead>
        <tr>
            <th style="width: 25%;">Destination</th>
            <th>Short</th>
            <th>Mid</th>
            <th>Long</th>
        </tr>
        </thead>
        {% for k, v in rows %}
            <tr>
                <td>
                    <script>document.write(getFlagEmoji("{{ countries[k].country }}"));</script>
                    <span title="{{ countries[k].name }}">{{ k }}</span><br>
                    <small>{{ countries[k].name | replace({'International Airport': '', 'Airport': ''}) }}</small>
                </td>
                {% for w in windowstarts %}
                    <td style="background-color: hsl(198deg 100% {{ 100 - 45 * v.windows[w].decrease }}%);">
                        {% if w in v.windows | keys %}
                            <span class="price">€{{ v.windows[w].price | round() }}</span><br>
                            <span class="period">{{ v.windows[w].departureDate | date("d/m") }} - {{ v.windows[w].returnDate | date("d/m") }}</span>
                            <br>
                            <!--<span class="period">{{ date(v.windows[w].returnDate).diff(date(v.windows[w].departureDate)).days }} days</span>-->
                        {% endif %}
                    </td>
                {% endfor %}
            </tr>
        {% endfor %}
    </table>

    <h2 class="mt-4">Trends</h2>
    <p>Looking at the current best fare compared with best if purchased in the preceding 90 days.</p>
    <table class="table">
        <thead>
        <tr>
            <th>Destination</th>
            <th>Trend</th>
            <th>Mean</th>
            <th>Now</th>
        </tr>
        </thead>
        {% for v in trends %}
            <tr>
                <td>
                    <script>document.write(getFlagEmoji("{{ countries[v.code].country }}"));</script>
                    <span title="{{ countries[v.code].name }}">{{ v.code }}</span><br>
                    <small>{{ countries[v.code].name | replace({'International Airport': '', 'Airport': ''}) }}</small>
                </td>
                <td>
                    <canvas id="spark{{ v.code }}" width="150" height="60" style="display: inline"></canvas>
                    <script>
                        var ctx = document.getElementById('spark{{ v.code }}').getContext('2d');
                        var chart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: [...Array({{ v.timeSeries | split(',') | length }}).keys()],
                                datasets: [
                                    {
                                        data: {{ v.timeSeries }}
                                    }
                                ]
                            },
                            options: {
                                responsive: false,
                                maintainAspectRatio: false,
                                plugins: {
                                    legend: {
                                        display: false
                                    },
                                },
                                elements: {
                                    line: {
                                        borderWidth: 2
                                    },
                                    point: {
                                        radius: 0
                                    }
                                },
                                tooltips: {
                                    enabled: false
                                },
                                scales: {
                                    x: {
                                        display: false
                                    },
                                    y: {
                                        suggestedMin: Math.floor({{ v.minPrice }}),
                                        suggestedMax: Math.ceil({{ v.maxPrice }}),
                                        ticks: {
                                            callback: function (label, index, labels) {
                                                return label;
                                            },
                                            maxTicksLimit: 2,
                                            autoSkipPadding: 0
                                        },


                                    }
                                }

                            }
                        });

                    </script>
                </td>
                <td><span class="price">€{{ v.avgBest | round }}</span></td>
                <td style="background-color: hsl(198deg 100% {{ 100 - 45 * -v.percentageDrop/100 }}%);">
                    <span class="price">€{{ v.latestPrice | round }}</span><br>
                    <span class="period">{% if v.percentageDrop >= 0 %}+{% endif %}{{ v.percentageDrop | round(2) }}%</span>
                </td>
            </tr>
        {% endfor %}
    </table>

{#    <div class="row">#}
{#        <h2 class="mt-3">Timeseries Comparison</h2>#}
{#        <div>#}
{#            <canvas id="myChart"></canvas>#}
{#        </div>#}

{#        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>#}

{#        <script>#}
{#            var ctx = document.getElementById('myChart');#}
{#            let data = {{ ts | json_encode() | raw }};#}

{#            var labels = [];#}
{#            var series = [];#}
{#            for (let [i, v] of Object.entries(data)) {#}
{#                var s = {label: i, data: []};#}
{#                for (let p of v) {#}
{#                    s.data.push(p.price);#}
{#                }#}
{#                series.push(s);#}
{#            }#}

{#            for (d of Object.values(data)[0]) {#}
{#                labels.push(d.date);#}
{#            }#}
{#            console.log(labels);#}
{#            console.log(series);#}

{#            new Chart(ctx, {#}
{#                type: 'line',#}
{#                data: {#}
{#                    labels: labels,#}
{#                    datasets: series#}
{#                },#}
{#                options: {#}
{#                    scales: {#}
{#                        y: {#}
{#                            beginAtZero: true#}
{#                        }#}
{#                    }#}
{#                }#}
{#            });#}


{#        </script>#}

{#    </div>#}

</div>
<script src="https://cdn.jsdelivr.net/npm/leaflet.geodesic"></script>
<script src="/flights.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
        integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

</body>
</html>


